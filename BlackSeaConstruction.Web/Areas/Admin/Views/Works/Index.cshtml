@model BlackSeaConstruction.Web.Areas.Admin.Models.WorksVM

<div class="row animated fadeIn mt-2">
    <div class="col-2 ml-2">
        <select class="form-control form-control-sm" id="select-size">
            @foreach (var size in BlackSeaConstruction.BusinessLogicLayer.ViewModels.PageVM.Sizes)
            {
                <option @(size == Model.Pages.Size ? "selected" : "")>@size</option>
            }
        </select>
    </div>
    <div class="col-4 text-white">
        <div>
            <input type="checkbox" id="isDeleted" name="isDeleted" @(Model.WithDeleted ? " checked" : "")>
            <label for="isDeleted">With Deleted</label>
        </div>
    </div>
    <button type="button" class="btn btn-warning ml-auto mr-3" id="add-project">Add Project</button>
    <button type="button" class="btn btn-outline-light mr-3" id="search">Search</button>
</div>
<div class="row animated fadeInUp mt-2">
    <div class="col-12">
        <table class="table table-hover bg-light shadow rounded-bottom table-sm">
            <thead>
                <tr class="thead-dark text-center">
                    <th scope="col">Id</th>
                    <th scope="col">Project Name</th>
                    <th scope="col">Latitude</th>
                    <th scope="col">Longtitude</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var project in Model.Projects)
                {
                    <tr class="text-center work-row pointer" data-id="@project.Id">
                        <th class="pointer" scope="row">@project.Id</th>
                        <td class="pointer">@project.ProjectName</td>
                        <td class="pointer">@(!project.Latitude.HasValue ? "—" : project.Latitude.ToString())</td>
                        <td class="pointer">@(!project.Longtitude.HasValue ? "—" : project.Longtitude.ToString())</td>
                        <td class="pointer delete-restore-btn" data-status="@project.IsDeleted.ToString().ToLower()">@(project.IsDeleted ? "✔" : "❌")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-auto ml-auto mr-2">
        <div class="btn-group shadow" role="group">
            <button type="button" class="btn btn-outline-light btn-sm" id="previous-page"><</button>
            @{
                foreach (var number in Model.Pages.Pages)
                {
                    if (number == Model.Pages.Number)
                    {
                        <button type="button" class="btn btn-outline-light btn-sm btn-page active"><b>@number</b></button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-outline-light btn-sm btn-page"><b>@number</b></button>
                    }
                }
            }
            <button type="button" class="btn btn-outline-light btn-sm" id="next-page">></button>
        </div>
    </div>
</div>

@section Modals {
    <div class="modal fade text-white" id="modal" tabindex="-1" role="dialog" aria-labelledby="modalTitle" aria-hidden="true">
        <div class="modal-dialog modal-xl bg-dark" role="document">
            <div class="modal-content bg-dark">
                <div class="modal-header">
                    <h3 class="modal-title" id="modalTitle">Add/Update Work</h3>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true" class="text-white">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="id-modal" />
                    <h5 class="text-center">Work Details</h5>
                    <div class="row rounded mb-2 mx-2 py-2" id="project-properties">
                        <div class="col-12">
                            <div class="form-group">
                                <label for="project-name">Name</label>
                                <input type="text" class="form-control" id="project-name" aria-describedby="nameHelp" placeholder="Enter project name..." />
                                <small id="nameHelp" class="form-text text-warning">This field is required.</small>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label for="project-description">Description</label>
                                <textarea class="form-control" id="project-description" placeholder="Enter project description..." maxlength="1000"></textarea>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-row">
                                <div class="col">
                                    <label for="project-latitude">Latitude</label>
                                    <input id="project-latitude" type="number" class="form-control" placeholder="Enter latitude..." max="85" min="-85" value="49.2827" step="0.000001">
                                </div>
                                <div class="col">
                                    <label for="project-longtitude">Longtitude</label>
                                    <input id="project-longtitude" type="number" class="form-control" placeholder="Enter longtitude..." max="180" min="-180" value="-123.1207" step="0.000001">
                                </div>
                            </div>
                        </div>
                        <div class="col-12 mt-4 pt-3">
                            <h6 class="text-center">Sections</h6>
                            <div id="project-sections">
                            </div>
                            <button type="button" class="btn btn-success ml-2 mt-2" id="add-section">Add Section</button>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-warning" id="save-works-changes">Save</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            function search() {
               var size = $('#select-size :selected').text();
                window.location.replace("@Url.Action("Index", "Works", new { area = "Admin" })?size=" + size + "&withDeleted=" + $('#isDeleted').is(':checked') + '&number=' + $('.btn-page.active').text());
            }

            $('.work-row').click(function () {
                clearModal();
                $.ajax({
                    url: '@Url.Action("GetWorkById", "Works", new { area = "Admin" })',
                    method: 'GET',
                    data: { id: $(this).data('id') },
                    success: function (data) {
                        $('#id-modal').val(data.work.id);
                        $('#project-name').val(data.work.projectName);
                        $('#project-description').val(data.work.description);
                        $('#project-latitude').val(data.work.latitude);
                        $('#project-longtitude').val(data.work.longtitude);
                        $(data.work.projectSections).each(function (i, section) {
                            addSection(section);
                        });
                        $('#modal').modal('show');
                    },
                    error: function () {
                        Swal.fire(
                            'Error!',
                            'Server error was occured. Please, contact support team!',
                            'error'
                        );
                    }
                });
            });

            $('#save-work-changes').click(function () {
                var id = $('#id-modal').val();
                var status = $('#status-modal :selected').val();
                $.ajax({
                    url: '@Url.Action("CreateOrUpdateWork", "Works", new { area = "Admin" })',
                    method: 'POST',
                    data: { id: id, status: status },
                    success: function (data) {
                        if (data.result) {
                            Swal.fire(
                                'Success!',
                                'Work was ' + (id ? 'updated' : 'created') + '.',
                                'success'
                            ).then(function () {
                                search();
                        });
                        } else {
                            Swal.fire(
                                'Error!',
                                "Something go wrong or work wasn't found.",
                                'error'
                            );
                        }
                    },
                    error: function () {
                        Swal.fire(
                            'Error!',
                            'Server error was occured. Please, contact support team!',
                            'error'
                        );
                    }
                });
            });

            $('#search').click(search);

            @if (Model.Pages.HasPreviousPage) {
                @:$('#previous-page').click(function () {
                @:    url = '?size=' + $('#select-size').val() + '&number=' + @(Model.Pages.Number - 1) + "&withDeleted=" + $('#isDeleted').is(':checked');
                @:    window.location.replace(url);
                @:});
            }
            else
            {
                @:$('#previous-page').addClass('disabled');
            }

            @if (Model.Pages.HasNextPage) {
                @:$('#next-page').click(function () {
                @:    url = '?size=' + $('#select-size').val() + '&number=' + @(Model.Pages.Number + 1) + "&withDeleted=" + $('#isDeleted').is(':checked');
                @:    window.location.replace(url);
                @:});
            }
            else
            {
                @:$('#next-page').addClass('disabled');
            }

            $('.btn-page').click(function () {
                url = '?size=' + $('#select-size').val() + '&number=' + $(this).text() + "&withDeleted=" + $('#isDeleted').is(':checked');
                window.location.replace(url);
            });

            $('.delete-restore-btn').click(function () {
                var isDeleted = $(this).data('status');
                Swal.fire({
                    title: 'Are you sure?',
                    text: "This record will be " + (isDeleted ? "restored" : "deleted") + "!",
                    type: 'warning',
                    showCancelButton: true
                }).then((result) => {
                    if (result.value) {
                        $.ajax({
                            url: '@Url.Action("DeleteOrRestore", "Works", new { area = "Admin" })',
                            method: 'POST',
                            data: { id: $(this).parent().data('id') },
                            success: function (data) {
                                if (data.result) {
                                    Swal.fire(
                                        'Deleted!',
                                        'Record has been ' + (isDeleted ? "restored" : "deleted") + '.',
                                        'success'
                                    ).then(function () {
                                        search();
                                    });
                                } else {
                                    Swal.fire(
                                        'Error!',
                                        "Record wasn't found.",
                                        'error'
                                    );
                                }
                            },
                            error: function () {
                                Swal.fire(
                                    'Error!',
                                    'Server error was occured. Please, contact support team!',
                                    'error'
                                );
                            }
                        });
                    }
                });
            });
            
            function addSectionImage(root, model) {
                var path = '';
                if (model) {
                    var image = '<img src=' + model.image + ' class="rounded mx-auto show-section-image img-thumbnail w-50 mb-2" data-id="' + model.id + '">';
                    if (model.image) {
                        path = model.image;
                    }
                } else {
                    var image = '<img src="#" class="rounded mx-auto d-none show-section-image img-thumbnail w-50 mb-2">';
                }
                var parent = root.parent('.section-image');
                parent.children('.section-image-list').append(
                    '<div class="section-image-row animated fadeInLeft text-center">' +
                        '<div class="input-group input-group-sm mb-2">' +
                            '<div class="custom-file text-left">' +
                                '<input type="file" class="custom-file-input inputGroupFile" id="inputGroupFile" aria-describedby="inputGroupFileAddon">' +
                                '<label class="custom-file-label" for="inputGroupFile">' + (path ? path : 'Choose file...') + '</label>' +
                            '</div>' +
                            '<div class="input-group-append">' +
                                '<button class="btn btn-danger delete-section-image" type="button" id="inputGroupFileAddon">Delete Image</button>' +
                            '</div>' +
                        '</div>' +
                        image +
                    '</div>');
                parent.find('.delete-section-image').off('click').click(function () {
                    var row = $(this).parents('div.section-image-row');
                    if (!row.find('img').data('id')) {
                        var image = row.addClass('fadeOutRight');
                        setTimeout(function () {
                            image.remove();
                        }, 1000);
                    } else {
                        Swal.fire({
                            title: 'Are you sure?',
                            text: "This image will be deleted!",
                            type: 'warning',
                            showCancelButton: true
                        }).then((result) => {
                            if (result.value) {
                                $.ajax({
                                    method: 'DELETE',
                                    url: '@Url.Action("DeleteSectionImage", "Works", new { area = "Admin" })',
                                    data: { id: $(this).parents('div.input-group').siblings('img').data('id') },
                                    success: function (data) {
                                        if (data.result) {
                                            var image = row.addClass('fadeOutRight');
                                            setTimeout(function () {
                                                image.remove();
                                            }, 1000);
                                        } else {
                                            Swal.fire(
                                                'Error!',
                                                "Record wasn't found.",
                                                'error'
                                            );
                                        }
                                    },
                                    error: function () {
                                        Swal.fire(
                                            'Error!',
                                            'Server error was occured. Please, contact support team!',
                                            'error'
                                        );
                                    }
                                });
                            }
                        });
                    }
                });
                $(".inputGroupFile").off("change").on("change", function () {
                    var input = $(this)[0];
                    $(this).next(".custom-file-label").html(input.files[0].name);
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $(input).parents("div.input-group").siblings("img.show-section-image").attr("src", e.target.result).removeClass("d-none").addClass("d-block animated fadeInUp");
                        };
                        reader.readAsDataURL(input.files[0]);
                    }
                    $(this).parents('div.input-group').siblings('img').data('updated', true);
                });
            }

            function addSection(section) {
                var id = '';
                if (section) {
                    var id = ' data-id="' + section.id + '"';
                }
                var parent = $('#project-sections');
                parent.append('<div class="row border border-warning rounded bg-secondary m-1 mb-2 py-2 project-section animated fadeIn"' + id + '>' +
                                  '<div class="col-12">' +
                                      '<button type="button" class="close delete-section ml-auto position-relative" style="margin-top: -5px;">' +
                                          '<span aria-hidden="true" class="text-white">&times;</span>' +
                                      '</button>' +
                                      '<div class="form-group">' +
                                          '<label for="section-name">Name</label>' +
                                          '<input type="text" class="form-control section-name" aria-describedby="nameHelp" placeholder="Enter section name..." />' +
                                      '</div>' +
                                  '</div>' +
                                  '<div class="col-12">' +
                                      '<div class="form-group">' +
                                          '<label for="section-description">Description</label>' +
                                          '<textarea class="form-control section-description" placeholder="Enter section description..." maxlength="500"></textarea>' +
                                      '</div>' +
                                  '</div>' +
                                  '<div class="section-image col-12">' +
                                      '<div class="section-image-list">' +
                                      '</div>' +
                                      '<button type="button" class="btn btn-sm btn-info mb-2 add-section-image">Add Image</button>' +
                                  '</div>' +
                                '</div>');

                if (section) {
                    var projectSection = parent.find('.project-section:last-child');
                    projectSection.find('input.section-name').val(section.sectionName);
                    projectSection.find('input.section-description').val(section.description);
                }

                parent.find('div button.delete-section').off('click').click(function () {
                    var section = $(this).parents('.project-section').addClass('fadeOut');
                    setTimeout(function () { section.remove(); }, 1000);
                });

                var root = $('.add-section-image').off('click').click(function () { addSectionImage($(this)); });
                if (section) {
                    $(section.images).each(function (i, image) {
                        addSectionImage(root, image);
                    });
                }
            }

            $('#add-section').click(function () { addSection(); });

            $('#add-project').click(function () {
                clearModal();
                $('#modal').modal('show');
            });

            function clearModal () {
                $('#project-sections').html(null);
                $('#project-name').val(null);
                $('#project-description').val(null);
                $('#project-latitude').val(null);
                $('#project-longtitude').val(null);
            }

            $('#save-works-changes').click(function () {
                var images = [];
                var projectId = $('#id-modal').val();
                var projectName = $('#project-name').val();
                var projectDescription = $('#project-description').val();
                var projectLatitude = $('#project-latitude').val();
                var projectLongtitude = $('#project-longtitude').val();
                var project = {
                    id: projectId,
                    name: projectName,
                    description: projectDescription,
                    latitude: projectLatitude,
                    longtitude: projectLongtitude,
                    sections: []
                };
                $('.project-section').each(function (i, section) {
                    var sectionId = $(section).data('id');
                    var sectionName = $(section).find('.section-name').val();
                    var sectionDescription = $(section).find('.section-description').val();
                    var projectSection = {
                        id: sectionId,
                        name: sectionName,
                        description: sectionDescription,
                        images: []
                    };
                    $(this).find('.section-image-list .section-image-row').each(function (i, row) {
                        var image = $(row).find('img');
                        var imageId = image.data('id');
                        var imageUpdated = image.data('updated');
                        var imageFile = '';
                        if ($(row).find('input')[0].files[0]) {
                            imageFile = $(row).find('input')[0].files[0].name;
                            images.push($(row).find('input')[0].files[0]);
                        }
                        if (!((!imageId) && (!imageUpdated) && (!imageFile))) {
                            projectSection.images.push({
                                id: imageId,
                                updated: imageUpdated,
                                fileName: imageFile
                            });
                        }
                    });
                    project.sections.push(projectSection);
                });
                $.ajax({
                    url: '@Url.Action("MergeWork", "Works", new { area = "Admin" })',
                    method: 'POST',
                    data: project,
                    success: function (data) {
                        debugger;
                        if (data.result) {
                            $.ajax({
                                url: '@Url.Action("UploadWorkImages", "Works", new { area = "Admin" })',
                                method: 'POST',
                                processData: false,
                                data: images,
                                success: function (data) {
                                    debugger;
                                    if (data.result) {
                                        Swal.fire(
                                            'Updated!',
                                            'Work has been updated successfully.',
                                            'success'
                                        ).then(function () {
                                            search();
                                        });
                                    } else {
                                        Swal.fire(
                                            'Error!',
                                            "Not all of images was uploaded successfully. Please, contact support team!",
                                            'error'
                                        );
                                    }
                                }, 
                                error: function () {
                                    Swal.fire(
                                        'Error!',
                                        'Server error was occured. Please, contact support team!',
                                        'error'
                                    );
                                }
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                "Something was wrong or record wasn't found.",
                                'error'
                            );
                        }
                    },
                    error: function () {
                        Swal.fire(
                            'Error!',
                            'Server error was occured. Please, contact support team!',
                            'error'
                        );
                    }
                });
            });
        });
    </script>
}
