@model BlackSeaConstruction.Web.Areas.Admin.Models.ServiceIndexVM

<div class="row animated fadeIn mt-2 justify-content-center">
    <div class="col-12 col-md-2">
        <select class="form-control form-control-sm" id="select-size">
            @foreach (var size in BlackSeaConstruction.BusinessLogicLayer.ViewModels.PageVM.Sizes)
            {
                <option @(size == Model.Pages.Size ? "selected" : "")>@size</option>
            }
        </select>
    </div>
    <div class="col-12 col-md-3 text-white text-left mt-2 mt-md-0">
        <input type="checkbox" id="isDeleted" name="isDeleted" @(Model.WithDeleted ? " checked" : "")>
        <label for="isDeleted">With Deleted</label>
    </div>
    <div class="col-12 col-md-7 text-right mt-2 mt-md-0">
        <button type="button" class="btn btn-outline-warning" id="change-service-types">Service Types</button>
        <button type="button" class="btn btn-warning" id="add-service">Add Service</button>
        <button type="button" class="btn btn-outline-light" id="search">Search</button>
    </div>
</div>

<div class="row animated fadeInUp mt-2 pb-2">
    <div class="col-12">
        <table class="table table-hover bg-light shadow rounded-bottom table-sm">
            <thead>
                <tr class="thead-dark text-center">
                    <th scope="col">Id</th>
                    <th scope="col">Service Name</th>
                    <th scope="col">Type</th>
                    <th scope="col"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var service in Model.Services)
                {
                    <tr class="text-center service-row" data-id="@service.Id">
                        <th class="pointer" scope="row">@service.Id</th>
                        <td class="pointer">@service.ServiceName</td>
                        <td class="pointer">@service.ServiceType</td>
                        <td class="pointer delete-restore-btn" data-status="@service.IsDeleted.ToString().ToLower()">@(service.IsDeleted ? "✔" : "❌")</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
    <div class="col-auto ml-auto mr-2">
        <div class="btn-group shadow" role="group">
            <button type="button" class="btn btn-outline-light btn-sm" id="previous-page"><</button>
            @{
                foreach (var number in Model.Pages.Pages)
                {
                    if (number == Model.Pages.Number)
                    {
                        <button type="button" class="btn btn-outline-light btn-sm btn-page active"><b>@number</b></button>
                    }
                    else
                    {
                        <button type="button" class="btn btn-outline-light btn-sm btn-page"><b>@number</b></button>
                    }
                }
            }
            <button type="button" class="btn btn-outline-light btn-sm" id="next-page">></button>
        </div>
    </div>
</div>

@section Modals {
    <div class="modal fade" id="modalServices" tabindex="-1" role="dialog" aria-labelledby="modalServicesTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalServicesTitle">Add/Update Service</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="hidden" id="id-modal" />
                    <div class="row justify-content-center">
                        <div class="col-12">
                            <div class="form-group">
                                <label for="service-name">Name</label>
                                <input type="text" class="form-control" id="service-name" aria-describedby="nameHelp" placeholder="Enter service name..." />
                                <small id="nameHelp" class="form-text text-warning">This field is required.</small>
                            </div>
                        </div>
                        <div class="col-12">
                            <div class="form-group">
                                <label for="service-description">Description</label>
                                <textarea class="form-control" id="service-description" placeholder="Enter service description..." maxlength="1000"></textarea>
                            </div>
                        </div>
                        <div class="col-12">
                            <select class="form-control" id="select-service-type">
                                @foreach (var type in Model.ServiceTypes.Where(x => !x.IsDeleted))
                                {
                                    <option value="@type.Id">@type.TypeName</option>
                                }
                            </select>
                        </div>
                        <div class="col-12 text-right mt-2">
                            <button type="button" class="btn btn-sm btn-info" id="add-service-image">Add image</button>
                        </div>
                        <div class="col-12 mt-2" id="service-images"></div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                    <button type="button" class="btn btn-warning" id="save-service-changes">Save</button>
                </div>
            </div>
        </div>
    </div>
    <div class="modal fade" id="modalServiceTypes" tabindex="-1" role="dialog" aria-labelledby="modalServiceTypesTitle" aria-hidden="true">
        <div class="modal-dialog modal-dialog-centered modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="modalServiceTypesTitle">Update Service Types</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-12">
                            <div class="form-row p-2 shadow-sm mx-2">
                                <div class="col-3">
                                    <div class="input-group">
                                        <div class="input-group-prepend">
                                            <div class="input-group-text">ID</div>
                                        </div>
                                        <input type="text" class="form-control text-center" disabled id="service-type-id">
                                    </div>
                                </div>
                                <div class="col">
                                    <input type="text" class="form-control" placeholder="Service type..." id="service-type-name">
                                </div>
                                <div class="col-auto">
                                    <button type="submit" class="btn btn-primary" id="merge-service-type">Merge</button>
                                    <button type="submit" class="btn btn-outline-danger" id="clear-service-type">Clear</button>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row justify-content-center">
                        <div class="col-12">
                            <table class="table table-hover shadow-sm table-sm border border-dark">
                                <thead>
                                    <tr class="thead-dark text-center">
                                        <th scope="col">Id</th>
                                        <th scope="col">Type Name</th>
                                        <th scope="col"></th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var type in Model.ServiceTypes)
                                    {
                                        <tr class="text-center service-type-row" data-id="@type.Id" data-toggle="tooltip" title="@((type.Services.Count() == 0) ? "<b>No services</b>" : $"<b>Services:</b> {string.Join(", ", type.Services.Select(x => x.ServiceName))}")">
                                            <th class="pointer" scope="row">@type.Id</th>
                                            <td class="pointer">@type.TypeName</td>
                                            <td class="pointer delete-restore-btn-service-type" data-status="@type.IsDeleted.ToString().ToLower()">@(type.IsDeleted ? "✔" : "❌")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@section Scripts {
    <script>
        $(document).ready(function () {
            activeLink('services-link');

            $('.service-row').find('td,th').not('.delete-restore-btn').click(function () {
                $.ajax({
                    url: '@Url.Action("GetServiceById", "Services", new { area = "Admin" })',
                    method: 'GET',
                    data: { id: $(this).parent().data('id') },
                    success: function (data) {

                        if (data) {
                            $('#id-modal').val(data.id);
                            $('#service-name').val(data.serviceName);
                            $('#service-description').val(data.description);
                            $('#select-service-type').val(data.typeId);

                            for (var i = 0; i < data.images.length; i++) {
                                addSectionImage($('#service-images'), data.images[i]);
                            }
                        }

                        $('#modalServices').modal('show');
                    },
                    error: function () {
                        Swal.fire(
                            'Error!',
                            'Server error was occured. Please, contact support team!',
                            'error'
                        );
                    }
                });
            });

            $('#save-service-changes').click(function () {
                var id = $('#id-modal').val();
                var serviceName = $('#service-name').val();
                var description = $('#service-description').val();
                var typeId = $('#select-service-type').val();
                var images = [];
                var files = [];
                $('.service-image-row').each(function (i, image) {
                    var fileName = null;
                    if ($(image).find('input.inputGroupFile')[0] && $(image).find('input.inputGroupFile')[0].files[0]) {
                        fileName = $(image).find('input.inputGroupFile')[0].files[0].name;
                        files.push($(image).find('input.inputGroupFile')[0].files[0]);
                    }
                    var imageToPush = {
                        id: $(image).find('img').data('id'),
                        updated: $(image).find('img').data('updated'),
                        image: fileName
                    };
                    images.push(imageToPush);
                });
                $.ajax({
                    url: '@Url.Action("MergeService", "Services", new { area = "Admin" })',
                    method: 'POST',
                    data: { id: id, serviceName: serviceName, description: description, images: images, typeId: typeId },
                    success: function (data) {
                        debugger;
                        var formData = new FormData();
                        for (var i = 0; i < files.length; i++) {
                            formData.append(files[i].name, files[i]);
                        }
                        if (data.result) {
                            $.ajax({
                                url: '@Url.Action("UploadImages", "Services",new { area = "Admin" })',
                                method: 'POST',
                                processData: false,
                                contentType: false,
                                data: formData,
                                success: function (data) {
                                    if (data.result) {
                                        Swal.fire(
                                            'Success!',
                                            'Service was updated.',
                                            'success'
                                        ).then(function () {
                                            search();
                                        });
                                    } else {
                                        Swal.fire(
                                            'Error!',
                                            "Something go wrong or images were empty or doesn't exist.",
                                            'error'
                                        );
                                    }
                                },
                                error: function () {
                                    Swal.fire(
                                        'Error!',
                                        'Server error was occured. Please, contact support team!',
                                        'error'
                                    );
                                }
                            });
                        } else {
                            Swal.fire(
                                'Error!',
                                "Something go wrong or service wasn't found.",
                                'error'
                            );
                        }
                    },
                    error: function () {
                        Swal.fire(
                            'Error!',
                            'Server error was occured. Please, contact support team!',
                            'error'
                        );
                    }
                });
            });

            function clearServicesModal () {
                $('#id-modal').val(null);
                $('#service-name').val(null);
                $('#service-description').val(null);
                $('#select-service-type').val(null);
                $('#service-images').html(null);
            }

            $('#add-service-image').click(function () {
                addSectionImage($('#service-images'));
            });

            function addSectionImage(root, model) {
                var path = '';
                if (model) {
                    var image = '<img src=' + model.image + ' class="rounded mx-auto show-service-image img-thumbnail w-50 mb-2" data-id="' + model.id + '">';
                    if (model.image) {
                        path = model.image;
                    }
                } else {
                    var image = '<img src="#" class="rounded mx-auto d-none show-service-image img-thumbnail w-50 mb-2">';
                }
                root.append(
                    '<div class="service-image-row animated fadeInLeft text-center">' +
                        '<div class="input-group input-group-sm mb-2">' +
                            '<div class="custom-file text-left">' +
                                '<input type="file" name="files" class="custom-file-input inputGroupFile" id="inputGroupFile" aria-describedby="inputGroupFileAddon">' +
                                '<label class="custom-file-label" for="inputGroupFile">' + (path ? path : 'Choose file...') + '</label>' +
                            '</div>' +
                            '<div class="input-group-append">' +
                                '<button class="btn btn-danger delete-service-image" type="button" id="inputGroupFileAddon">Delete Image</button>' +
                            '</div>' +
                        '</div>' +
                        image +
                    '</div>');
                root.find('.delete-service-image').off('click').click(function () {
                    var row = $(this).parents('div.service-image-row');
                    if (!row.find('img').data('id')) {
                        var image = row.addClass('fadeOutRight');
                        setTimeout(function () {
                            image.remove();
                        }, 1000);
                    } else {
                        Swal.fire({
                            title: 'Are you sure?',
                            text: "This image will be deleted!",
                            type: 'warning',
                            showCancelButton: true
                        }).then((result) => {
                            if (result.value) {
                                $.ajax({
                                    method: 'DELETE',
                                    url: '@Url.Action("DeleteServiceImage", "Services", new { area = "Admin" })',
                                    data: { id: $(this).parents('div.input-group').siblings('img').data('id') },
                                    success: function (data) {
                                        if (data.result) {
                                            var image = row.addClass('fadeOutRight');
                                            setTimeout(function () {
                                                image.remove();
                                            }, 1000);
                                        } else {
                                            Swal.fire(
                                                'Error!',
                                                "Record wasn't found.",
                                                'error'
                                            );
                                        }
                                    },
                                    error: function () {
                                        Swal.fire(
                                            'Error!',
                                            'Server error was occured. Please, contact support team!',
                                            'error'
                                        );
                                    }
                                });
                            }
                        });
                    }
                });
                $(".inputGroupFile").off("change").on("change", function () {
                    var input = $(this)[0];
                    $(this).next(".custom-file-label").html(input.files[0].name);
                    if (input.files && input.files[0]) {
                        var reader = new FileReader();
                        reader.onload = function (e) {
                            $(input).parents("div.input-group").siblings("img.show-service-image").attr("src", e.target.result).removeClass("d-none").addClass("d-block animated fadeInUp");
                        };
                        reader.readAsDataURL(input.files[0]);
                    }
                    $(this).parents('div.input-group').siblings('img').data('updated', true);
                });
            }

            $('#add-service').click(function () {
                clearServicesModal();
                $('#modalServices').modal('show');
            });

            $('#change-service-types').click(function () {
                $('#modalServiceTypes').modal('show');
            });

            function clearServiceTypeUpdateForm () {
                $('#service-type-id').val(null);
                $('#service-type-name').val(null);
            }

            $('#clear-service-type').click(function () {
                clearServiceTypeUpdateForm();
            });

            $('#merge-service-type').click(function () {
                 $.ajax({
                     url: '@Url.Action("MergeServiceType", "Services", new { area = "Admin" })',
                     method:'POST',
                     data: { id: $('#service-type-id').val(), typeName: $('#service-type-name').val() },
                     success: function (data) {
                         if (data.result) {
                             Swal.fire(
                                 'Success!',
                                 'Service type was successfully merged.',
                                 'success'
                             ).then(function () {
                                 search();
                             });
                         } else {
                             Swal.fire(
                                 'Error!',
                                 "Something go wrong or service wasn't found.",
                                 'error'
                             );
                         }
                     },
                     error: function () {
                         Swal.fire(
                             'Error!',
                             'Server error was occured. Please, contact support team!',
                             'error'
                         );
                     }
                });
            });

            $('.service-type-row').tooltip({ animation: true, placement: "auto", html: true }).click(function () {
                var id = $(this).data('id');
                $.ajax({
                    url: '@Url.Action("GetServiceTypeById", "Services", new { area = "Admin" })',
                    data: { id: id },
                    success: function (data) {
                        if (data) {
                            $('#service-type-id').val(data.id);
                            $('#service-type-name').val(data.typeName);
                        } else {
                            Swal.fire(
                                'Error!',
                                "Something go wrong or service wasn't found.",
                                'error'
                            );
                            clearServiceTypeUpdateForm();
                        }
                    },
                    error: function () {
                        Swal.fire(
                            'Error!',
                            'Server error was occured. Please, contact support team!',
                            'error'
                        );
                    }
                });
            });

            function search() {
                var size = $('#select-size :selected').text();
                window.location.replace("@Url.Action("Index", "Services", new { area = "Admin" })?size=" + size + "&withDeleted=" + $('#isDeleted').is(':checked') + '&number=' + $('.btn-page.active').text());
            }

            $('#search').click(search);

            if (@Model.Pages.HasPreviousPage.ToString().ToLower()) {
            $('#previous-page').click(function () {
                url = '?size=' + $('#select-size').val() + '&number=' + @(Model.Pages.Number - 1) + "&withDeleted=" + $('#isDeleted').is(':checked');
                window.location.replace(url);
            });
            } else {
                $('#previous-page').addClass('disabled');
            }

            if (@Model.Pages.HasNextPage.ToString().ToLower()) {
                $('#next-page').click(function () {
                    url = '?size=' + $('#select-size').val() + '&number=' + @(Model.Pages.Number + 1) + "&withDeleted=" + $('#isDeleted').is(':checked');
                    window.location.replace(url);
                });
            } else {
                $('#next-page').addClass('disabled');
            }

            $('.btn-page').click(function () {
                url = '?size=' + $('#select-size').val() + '&number=' + $(this).text() + "&withDeleted=" + $('#isDeleted').is(':checked');
                window.location.replace(url);
            });

            $('.delete-restore-btn').click(function () {
                var isDeleted = $(this).data('status');
                Swal.fire({
                    title: 'Are you sure?',
                    text: "This record will be " + (isDeleted ? "restored" : "deleted") + "!",
                    type: 'warning',
                    showCancelButton: true
                }).then((result) => {
                    if (result.value) {
                        $.ajax({
                            url: '@Url.Action("DeleteOrRestore", "Services", new { area = "Admin" })',
                            method: 'POST',
                            data: { id: $(this).parent().data('id') },
                            success: function (data) {
                                if (data.result) {
                                    Swal.fire(
                                        (isDeleted ? "Restored" : "Deleted") + '!',
                                        'Record has been ' + (isDeleted ? "restored" : "deleted") + '.',
                                        'success'
                                    ).then(function () {
                                        search();
                                    });
                                } else {
                                    Swal.fire(
                                        'Error!',
                                        "Record wasn't found.",
                                        'error'
                                    );
                                }
                            },
                            error: function () {
                                Swal.fire(
                                    'Error!',
                                    'Server error was occured. Please, contact support team!',
                                    'error'
                                );
                            }
                        });
                    }
                });
            });

            $('.delete-restore-btn-service-type').click(function () {
                var isDeleted = $(this).data('status');
                Swal.fire({
                    title: 'Are you sure?',
                    text: "This record will be " + (isDeleted ? "restored" : "deleted") + "!",
                    type: 'warning',
                    showCancelButton: true
                }).then((result) => {
                    if (result.value) {
                        $.ajax({
                            url: '@Url.Action("DeleteOrRestoreServiceType", "Services", new { area = "Admin" })',
                            method: 'POST',
                            data: { id: $(this).parent().data('id') },
                            success: function (data) {
                                if (data.result) {
                                    Swal.fire(
                                        (isDeleted ? "Restored" : "Deleted") + '!',
                                        'Record has been ' + (isDeleted ? "restored" : "deleted") + '.',
                                        'success'
                                    ).then(function () {
                                        search();
                                    });
                                } else {
                                    Swal.fire(
                                        'Error!',
                                        "Record wasn't found.",
                                        'error'
                                    );
                                }
                            },
                            error: function () {
                                Swal.fire(
                                    'Error!',
                                    'Server error was occured. Please, contact support team!',
                                    'error'
                                );
                            }
                        });
                    }
                });
            });
        });
    </script>
}
